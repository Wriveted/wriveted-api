"""Fix fk between school and user

Revision ID: 487b983bc323
Revises: 7f02230c1599
Create Date: 2022-02-08 21:30:21.009217

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "487b983bc323"
down_revision = "7f02230c1599"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_school_admin", "schools", type_="foreignkey")
    op.drop_column("schools", "admin_id")
    op.add_column(
        "schools", sa.Column("admin_id", postgresql.UUID(as_uuid=True), nullable=True)
    )
    op.create_foreign_key(None, "schools", "users", ["admin_id"], ["id"])
    op.drop_constraint("fk_admin_school", "users", type_="foreignkey")
    op.drop_column("users", "school_id_as_admin")
    op.add_column("users", sa.Column("school_id_as_admin", sa.Integer(), nullable=True))
    op.create_foreign_key(
        "fk_admin_school", "users", "schools", ["school_id_as_admin"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_admin_school", "users", type_="foreignkey")
    op.drop_column("users", "school_id_as_admin")
    op.add_column(
        "users",
        sa.Column(
            "school_id_as_admin", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.create_foreign_key(
        "fk_admin_school", "users", "schools", ["school_id_as_admin"], ["id"]
    )
    op.drop_constraint(None, "schools", type_="foreignkey")
    op.drop_column("schools", "admin_id")
    op.add_column(
        "schools",
        sa.Column(
            "admin_id",
            postgresql.UUID(as_uuid=True),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_foreign_key("fk_school_admin", "schools", "users", ["admin_id"], ["id"])
    # ### end Alembic commands ###
