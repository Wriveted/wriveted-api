"""cleanup 27/01/22

Revision ID: abd0a1ea9168
Revises: 78f7fcab5df6
Create Date: 2022-01-27 23:00:37.215159

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "abd0a1ea9168"
down_revision = "78f7fcab5df6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "db_jobs",
        sa.Column(
            "type", sa.Enum("POPULATE", "UPDATE", name="jobtype"), nullable=False
        ),
    )
    op.add_column(
        "db_jobs",
        sa.Column(
            "status",
            sa.Enum("PENDING", "RUNNING", "COMPLETE", "FAILED", name="jobstatus"),
            nullable=False,
        ),
    )
    op.add_column("db_jobs", sa.Column("school_id", sa.Integer(), nullable=False))
    op.create_index(
        op.f("ix_db_jobs_school_id"), "db_jobs", ["school_id"], unique=False
    )
    op.create_foreign_key(
        "fk_db_jobs_schools", "db_jobs", "schools", ["school_id"], ["id"]
    )
    op.drop_column("db_jobs", "job_type")
    op.drop_column("db_jobs", "job_status")
    op.alter_column(
        "genres",
        "bisac_code",
        existing_type=sa.VARCHAR(length=8),
        type_=sa.String(length=12),
        existing_nullable=True,
    )
    op.add_column(
        "labelset_genre_association",
        sa.Column("genre_id", sa.Integer(), nullable=False),
    )
    op.drop_constraint(
        "fk_labelset_genre_association_genre_id",
        "labelset_genre_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_labelset_genre_association_genre_id",
        "labelset_genre_association",
        "genres",
        ["genre_id"],
        ["id"],
    )
    op.drop_column("labelset_genre_association", "hue_id")
    op.add_column("labelsets", sa.Column("updated_at", sa.DateTime(), nullable=False))
    op.create_index(
        op.f("ix_labelsets_work_id"), "labelsets", ["work_id"], unique=False
    )
    op.drop_column("labelsets", "huey_pick")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "labelsets",
        sa.Column("huey_pick", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_index(op.f("ix_labelsets_work_id"), table_name="labelsets")
    op.drop_column("labelsets", "updated_at")
    op.add_column(
        "labelset_genre_association",
        sa.Column("hue_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(
        "fk_labelset_genre_association_genre_id",
        "labelset_genre_association",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_labelset_genre_association_genre_id",
        "labelset_genre_association",
        "genres",
        ["hue_id"],
        ["id"],
    )
    op.drop_column("labelset_genre_association", "genre_id")
    op.alter_column(
        "genres",
        "bisac_code",
        existing_type=sa.String(length=12),
        type_=sa.VARCHAR(length=8),
        existing_nullable=True,
    )
    op.add_column(
        "db_jobs",
        sa.Column(
            "job_status",
            postgresql.ENUM("PENDING", "RUNNING", "COMPLETE", name="jobstatus"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "db_jobs",
        sa.Column(
            "job_type",
            postgresql.ENUM("POPULATE", "UPDATE", name="jobtype"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint("fk_db_jobs_schools", "db_jobs", type_="foreignkey")
    op.drop_index(op.f("ix_db_jobs_school_id"), table_name="db_jobs")
    op.drop_column("db_jobs", "school_id")
    op.drop_column("db_jobs", "status")
    op.drop_column("db_jobs", "type")
    # ### end Alembic commands ###
