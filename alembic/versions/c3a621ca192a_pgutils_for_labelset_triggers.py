"""pgutils for labelset triggers

Revision ID: c3a621ca192a
Revises: e2d1a9109e46
Create Date: 2023-03-24 13:49:56.929249

"""

from alembic_utils.pg_function import PGFunction
from alembic_utils.pg_trigger import PGTrigger

from alembic import op

# revision identifiers, used by Alembic.
revision = "c3a621ca192a"
down_revision = "e2d1a9109e46"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_labelsets_labelsets_checked_at = PGTrigger(
        schema="public",
        signature="labelsets_checked_at",
        on_entity="public.labelsets",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON public.labelsets FOR EACH ROW EXECUTE FUNCTION set_checked_at()",
    )
    op.drop_entity(public_labelsets_labelsets_checked_at)

    public_set_checked_at = PGFunction(
        schema="public",
        signature="set_checked_at()",
        definition="returns trigger\n LANGUAGE plpgsql\nAS $function$\n        BEGIN\n            IF NEW.checked = true THEN\n                NEW.checked_at := NOW();\n            END IF;\n            RETURN NEW;\n        END;\n        $function$",
    )
    op.drop_entity(public_set_checked_at)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    public_set_checked_at = PGFunction(
        schema="public",
        signature="set_checked_at()",
        definition="returns trigger\n LANGUAGE plpgsql\nAS $function$\n        BEGIN\n            IF NEW.checked = true THEN\n                NEW.checked_at := NOW();\n            END IF;\n            RETURN NEW;\n        END;\n        $function$",
    )
    op.create_entity(public_set_checked_at)

    public_labelsets_labelsets_checked_at = PGTrigger(
        schema="public",
        signature="labelsets_checked_at",
        on_entity="public.labelsets",
        is_constraint=False,
        definition="BEFORE INSERT OR UPDATE ON public.labelsets FOR EACH ROW EXECUTE FUNCTION set_checked_at()",
    )
    op.create_entity(public_labelsets_labelsets_checked_at)
    # ### end Alembic commands ###
