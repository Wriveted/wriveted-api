"""make username non-nullable for readers

Revision ID: 35112b0ae03e
Revises: 77c90a741ba7
Create Date: 2022-06-02 15:50:35.584586

"""
import sqlalchemy as sa

# revision identifiers, used by Alembic.
from sqlalchemy import select, update

from alembic import op
from app.services.users import new_identifiable_username

revision = "35112b0ae03e"
down_revision = "77c90a741ba7"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    meta = sa.MetaData(bind=op.get_bind())
    meta.reflect(only=("readers",))
    readers_table = sa.Table("readers", meta)
    conn = op.get_bind()

    res = conn.execute(
        select(
            readers_table.c.id,
            readers_table.c.first_name,
            readers_table.c.last_name_initial,
        ).where(readers_table.c.username == None)
    )
    results = res.fetchall()

    for id, first, last_initial in results:
        new_username = new_identifiable_username(first, last_initial, session=conn)
        conn.execute(
            update(readers_table)
            .where(readers_table.c.id == id)
            .values(username=new_username)
        )

    op.alter_column(
        "readers",
        "username",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column("readers", "username", server_default=None)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("readers", "username", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###
