"""add labelset table and relationships

Revision ID: aaa2118c61fd
Revises: 948ff66b643d
Create Date: 2022-01-19 13:49:53.365139

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "aaa2118c61fd"
down_revision = "948ff66b643d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "hues",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_hues_name"), "hues", ["name"], unique=True)
    op.create_table(
        "labelsets",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("work_id", sa.Integer(), nullable=True),
        sa.Column(
            "reading_ability",
            sa.Enum(
                "SPOT",
                "CAT_HAT",
                "TREEHOUSE",
                "CHARLIE_CHOCOLATE",
                "HARRY_POTTER",
                name="readingability",
            ),
            nullable=True,
        ),
        sa.Column(
            "doe_code",
            sa.Enum(
                "DOE_2G",
                "DOE_2H",
                "DOE_2I",
                "DOE_2J",
                "DOE_2K",
                "DOE_2L",
                "DOE_3G",
                "DOE_3H",
                "DOE_3I",
                "DOE_3J",
                "DOE_3K",
                "DOE_3L",
                "DOE_4G",
                "DOE_4H",
                "DOE_4I",
                "DOE_4J",
                "DOE_4K",
                "DOE_4L",
                name="doecode",
            ),
            nullable=True,
        ),
        sa.Column("min_age", sa.Integer(), nullable=True),
        sa.Column("max_age", sa.Integer(), nullable=True),
        sa.Column("lexile", sa.String(length=5), nullable=True),
        sa.Column("huey_pick", sa.Boolean(), nullable=True),
        sa.Column("labelled_by_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("checked", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["labelled_by_id"], ["users.id"], name="fk_labeller_labelset"
        ),
        sa.ForeignKeyConstraint(["work_id"], ["works.id"], name="fk_labelset_work"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "labelset_hue_association",
        sa.Column("labelset_id", sa.Integer(), nullable=False),
        sa.Column("hue_id", sa.Integer(), nullable=False),
        sa.Column(
            "ordinal",
            sa.Enum("PRIMARY", "SECONDARY", "TERTIARY", name="ordinal"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["hue_id"], ["hues.id"], name="fk_labelset_hue_association_hue_id"
        ),
        sa.ForeignKeyConstraint(
            ["labelset_id"],
            ["labelsets.id"],
            name="fk_labelset_hue_association_labelset_id",
        ),
        sa.PrimaryKeyConstraint("labelset_id", "hue_id", "ordinal"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("labelset_hue_association")
    op.drop_table("labelsets")
    op.drop_index(op.f("ix_hues_name"), table_name="hues")
    op.drop_table("hues")
    op.execute("DROP TYPE readingability")
    op.execute("DROP TYPE doecode")
    op.execute("DROP TYPE ordinal")
    # ### end Alembic commands ###
