steps:
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--build-arg'
      - 'BUILDKIT_INLINE_CACHE=1'
      - '--cache-from'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:pr-$_PR_NUMBER'
      - '--cache-from'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:pr-$_PR_NUMBER'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
      - .
      - '-f'
      - Dockerfile
    id: Build
    env:
      - 'DOCKER_BUILDKIT=1'
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push-commitSHA
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:latest'
    id: Push-latest
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:pr-$_PR_NUMBER'
    id: PushPRTag
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - >-
        --set-env-vars=POSTGRESQL_DATABASE_SOCKET_PATH=/cloudsql,POSTGRESQL_USER=cloudrun,GCP_CLOUD_SQL_INSTANCE_ID=wriveted-development,LOG_AS_JSON=True,GCP_CLOUD_TASKS_NAME=background-tasks
      - '--port=8000'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --set-secrets=POSTGRESQL_PASSWORD=wriveted-api-cloud-sql-password:latest,SECRET_KEY=wriveted-api-secret-key:latest,SENDGRID_API_KEY=sendgrid-api-key:latest,SHOPIFY_HMAC_SECRET=shopify-hmac-secret:latest
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--tag=pr-$_PR_NUMBER'
      - '--concurrency=25'
      - '--max-instances=3'
    id: Deploy
    entrypoint: gcloud
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - "$_SERVICE_NAME-internal"
      - '--platform=managed'
      - >-
        --set-env-vars=POSTGRESQL_DATABASE_SOCKET_PATH=/cloudsql,POSTGRESQL_USER=cloudrun,GCP_CLOUD_SQL_INSTANCE_ID=wriveted-development,LOG_AS_JSON=True
      - '--port=8000'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --set-secrets=POSTGRESQL_PASSWORD=wriveted-api-cloud-sql-password:latest,SECRET_KEY=wriveted-api-secret-key:latest,SENDGRID_API_KEY=sendgrid-api-key:latest,SHOPIFY_HMAC_SECRET=shopify-hmac-secret:latest
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--tag=pr-$_PR_NUMBER'
      - '--concurrency=25'
      - '--max-instances=3'
      - '--args=app.internal_api:internal_app'
    id: Deploy-internal-api
    entrypoint: gcloud
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'bash'
    args: ['-c', './.cloudbuild/scripts/slack-send.sh $_PR_NUMBER']
    secretEnv: ['SLACK_WEBHOOK']
    id: SlackNotification
availableSecrets:
  secretManager:
    - versionName: projects/wriveted-api/secrets/cloud-build-slack-app-webhook/versions/latest
      env: 'SLACK_WEBHOOK'
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _LABELS: gcb-trigger-id=9f282197-7608-44c1-8669-e90743828fb1
  _TRIGGER_ID: 9f282197-7608-44c1-8669-e90743828fb1
  _GCR_HOSTNAME: asia.gcr.io
  _PLATFORM: managed
  _SERVICE_NAME: wriveted-api-development
  _DEPLOY_REGION: australia-southeast1
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - wriveted-api-development
