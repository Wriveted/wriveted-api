name: CI
on:
  push:
  pull_request:
    types: [opened]
jobs:
  hadolint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-hadolint@v1
        with:
          filter_mode: file

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-shellcheck@v1
        with:
          filter_mode: file

  lint:
    name: Code Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - uses: actions/setup-python@v4.7.0
        id: python
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Check formatting
        uses: chartboost/ruff-action@v1
      - uses: dciborow/action-pylint@0.1.0
        with:
          github_token: ${{ secrets.github_token }}
          # GitHub Status Check won't become failure with warning.
          level: warning
          filter_mode: diff_context
          glob_pattern: "**/*.py"
          pylint_args: "--disable=all, --enable=unused-import"

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: asia.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_ACCESS }}
      - run: |
          ./scripts/integration-tests.sh
        env:
          PR_NUMBER: ${{ github.event.number }}

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Git Checkout
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - uses: actions/setup-python@v4.7.0
        id: python
        with:
          python-version-file: "pyproject.toml"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Run tests
        run: |
          echo "Setup Test Environment Variables"
          export SECRET_KEY=CHrUJmNw1haKVSorf3ooW-D6eRooePyo-V8II--We78
          export POSTGRESQL_PASSWORD=unused-password-set-for-unit-testing
          export SENDGRID_API_KEY=unused-key-set-for-testing
          export SHOPIFY_HMAC_SECRET=unused-key-set-for-testing
          export SLACK_BOT_TOKEN=unused-key-for-testing
          poetry run pytest app/tests/unit
